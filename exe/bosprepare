#!/usr/bin/env python
#
# Copyright (C) 2012        SWOAG Technology
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import os, sys
from subprocess import call

from bomb.main import Bos
from bomb.log import Blog
from bomb.package import BosPackage
from bomb.util import bos_run

def bosprepare():
    name = sys.argv[1]
    pkg = BosPackage.open(name)

    ret = 0
    if pkg.patch and not os.path.exists(pkg.patched):
        for p in pkg.patch:
            Blog.info("patching %s: %s" % (name, p))
            ret,logname = bos_run(['patch', '-p1',
                                   '-d', pkg.src,
                                   '-i', os.path.join(os.path.dirname(pkg.mk), p)])
        if 0 != ret:
            Blog.fatal('%s unable to apply patch: %s' % (name, p))

    if 0 == ret and pkg.patch:
        Bos.touch(pkg.patched)

    if pkg.prepare_yes:
        Blog.info("preparing %s" % name)
        Bos.get_env(pkg.native)
        ret,logname = bos_run(['make', '-C', pkg.src,
                               '-f', pkg.mk,
                               '--no-print-directory',
                               'MK=%s' % os.path.dirname(pkg.mk),
                               'prepare'], pkg.logdir + '-prepare')
        if 0 != ret:
            Blog.fatal('%s failed to prepare, see log at: %s' % (name, logname))

    if 0 == ret: Bos.touch(Bos.statesdir + name + '.p')

if __name__ == '__main__':
    try:
        ret = bosprepare()
    except Exception:
        ret = 1
        if os.environ['_BOS_TRACE_'] == 'yes':
            import traceback
            traceback.print_exc(5)
    sys.exit(ret)
